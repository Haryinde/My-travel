type Error = variant {
  DecodeError : record { msg : text };
  NotFound : record { msg : text };
};
type Result = variant { Ok : TravelPlan; Err : Error };
type Result_1 = variant { Ok : float64; Err : Error };
type TravelPlan = record {
  id : nat64;
  destination : text;
  transportation : text;
  activities : vec text;
  end_date : nat64;
  accommodation : text;
  start_date : nat64;
};
type TravelPlanPayload = record {
  destination : text;
  transportation : text;
  activities : vec text;
  end_date : nat64;
  accommodation : text;
  start_date : nat64;
};
service : {
  add_travel_plan : (TravelPlanPayload) -> (opt TravelPlan);
  calculate_travel_plan_duration : (nat64) -> (opt nat64) query;
  count_travel_plans : () -> (nat64) query;
  delete_travel_plan : (nat64) -> (Result);
  get_next_available_id : () -> (nat64) query;
  get_remaining_budget : () -> (float64) query;
  get_travel_plan : (nat64) -> (Result) query;
  record_expense : (float64) -> (Result_1);
  set_budget : (float64) -> (float64);
  update_travel_plan : (nat64, TravelPlanPayload) -> (Result);
}
